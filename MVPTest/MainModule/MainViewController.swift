//
//  MainViewController.swift
//  MVPTest
//
//  Created Bezdenezhnykh Sergey on 16.06.2021.
//  Copyright Â© 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Edward
//

import UIKit
import AVKit
import AVFoundation

final class MainViewController: UIViewController {

	var presenter: MainPresenterProtocol?
    private var constrains = [NSLayoutConstraint]()
    
    private var labelName: AlignableUILabel = {
        var label = AlignableUILabel()
        label.font = UIFont.systemFont(ofSize: 20, weight: .semibold)
        label.contentMode = UIView.ContentMode.top
        label.numberOfLines = 0
        label.textAlignment = .center
        label.textColor = .label
        label.backgroundColor = .clear
        label.text = ""
        label.numberOfLines = 0
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()
    
    private lazy var stackView: UIStackView = {
        let sv = UIStackView(frame: .zero)
        sv.distribution = .equalSpacing
        sv.translatesAutoresizingMaskIntoConstraints = false
        sv.alignment = .center
        sv.axis = .horizontal
        sv.spacing = 0
        return sv
    }()
    
	override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.title = "Test"
        presenter?.viewDidLoad()
        view.backgroundColor = .systemBackground
        view.addSubview(labelName)
        view.addSubview(stackView)
        addConstraints()
    }
    
    @objc private func buttonTapped(sender: UrlButton) {
        presenter?.playVideo(stringUrl: sender.urlVideo)
    }
    
    private func addConstraints() {
        constrains = [
            labelName.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor, constant: 16),
            labelName.trailingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.trailingAnchor),
            labelName.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 30),
            labelName.bottomAnchor.constraint(equalTo: stackView.topAnchor),
            
            stackView.leadingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.leadingAnchor, constant: 16),
            stackView.trailingAnchor.constraint(equalTo: view.safeAreaLayoutGuide.trailingAnchor, constant: -16),
            stackView.heightAnchor.constraint(equalToConstant: 40),
            stackView.bottomAnchor.constraint(equalTo: view.safeAreaLayoutGuide.bottomAnchor, constant: -30)
        ]
        NSLayoutConstraint.activate(constrains)
    }

}

extension MainViewController: MainViewProtocol {
    func makeButtons(videoLinks: VideoLinks) {
        videoLinks.forEach { videoLink in
            let button = UrlButton(type: .custom)
            button.addTarget(self, action: #selector(buttonTapped(sender:)), for: .touchUpInside)
            button.backgroundColor = .primary
            button.clipsToBounds = true
            button.translatesAutoresizingMaskIntoConstraints = false
            button.layer.cornerRadius = 4
            button.layer.masksToBounds = false
            button.layer.shadowColor = UIColor.black.cgColor
            button.layer.shadowOffset = CGSize(width: 1.0, height: 1.0)
            button.layer.shadowOpacity = 1.0
            button.layer.shadowRadius = 2.0
            button.layer.shouldRasterize = true
            button.layer.rasterizationScale = UIScreen.main.scale
            button.widthAnchor.constraint(equalToConstant: 35).isActive = true
            button.heightAnchor.constraint(equalToConstant: 35).isActive = true
            button.setTitle(videoLink.quality, for: .normal)
            button.titleLabel?.font = .systemFont(ofSize: 12, weight: .medium)
            button.titleLabel?.textColor = .white
            button.urlVideo = videoLink.url
            stackView.addArrangedSubview(button)
        }
    }
    
    func outMatchInfo(match: Match) {
        var stringLabel = DateParser().parseIsoString(date: match.date) ?? "-"
        stringLabel += "\n" + match.tournament.nameEng
        stringLabel += "\n" + match.team1.nameEng + " - " + match.team2.nameEng
        stringLabel += "\n" + String(match.team1.score ?? 0) + " : " + String(match.team2.score ?? 0)
        labelName.text = stringLabel
    }
    
    func presentVideo(urlString: String) {
        guard let videoURL = URL(string: urlString) else { return }
        let player = AVPlayer(url: videoURL)
        let vc = AVPlayerViewController()
        vc.player = player
        present(vc, animated: true)
        player.play()
    }
}
